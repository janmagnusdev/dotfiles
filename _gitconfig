[user]
name = Stefan Scherfke
email = stefan@sofa-rockers.org

[core]
excludesfile = $HOME/.gitignore_global
pager = delta --light

[interactive]
diffFilter = delta --light --color-only

[delta]
# features = side-by-side line-numbers decorations
features = line-numbers decorations
whitespace-error-style = 22 reverse

[delta "decorations"]
commit-decoration-style = bold purple box ul
file-style = bold purple ul
file-decoration-style = none

[pull]
# The "rebase" strategy does not work well when there are uncommited changes,
# but the "merge" strategy does.  This is more convenient and I do explit
# "git pull --rebase" when needed.
rebase = false

[push]
default = simple

[diff]
tool = meld

[merge]
# tool = meld
tool = splice

[mergetool "splice"]
cmd = "vim -f $BASE $LOCAL $REMOTE $MERGED -c 'SpliceInit'"
trustExitCode = true

[color]
diff = auto
status = auto
branch = auto
ui = auto

[color "diff"]
meta = bold magenta

[log]
decorate = auto

[alias]
br = branch
ci = commit
co = checkout
rs = restore
st = status
sw = switch
last = log -1 HEAD
unstage = reset HEAD --
rollback = reset HEAD^
lg = log --graph --abbrev-commit --decorate --format=format:'%C(bold)%s%C(reset)%n''%C(blue)%h%C(reset) - %C(cyan)%an%C(reset) on %C(green)%aD%C(reset) %C(yellow)(%ar)%C(reset)%C(red)%d%C(reset)%n' --all
lg5 = !"git lg -5"
# Push, skip CI/CD
pushnoci = push -o ci.skip
# Push feature branch and merge into develop if pipeline succeeds
pushmergedevelop = push -o merge_request.create -o merge_request.target=develop -o merge_request.merge_when_pipeline_succeeds
# Push develop branch and create a request for mergin into master
pushmergemaster = push -o merge_request.create -o merge_request.target=master
